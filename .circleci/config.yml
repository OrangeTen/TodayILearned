version: 2.0

jobs:
  react_install_dependencies:
    docker:
      - image: circleci/node:7.10
    working_directory: ~/app
    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "tilup-web/package.json" }}
          - v1-dependencies-
      - run:
          name: npm install
          command: |
            cd tilup-web
            npm install

      - save_cache:
          paths:
            - tilup-web/node_modules
          key: v1-dependencies-{{ checksum "tilup-web/package.json" }}
      - persist_to_workspace:
          root: .
          paths: .

  react_lint_checks:
    docker:
      - image: circleci/node:7.10
    working_directory: ~/app
    steps:
      - attach_workspace:
          at: ~/app
      - run:
          name: Run lint checks
          command: |
            cd tilup-web
            npm run lint

  react_tests:
    docker:
      - image: circleci/node:7.10
    working_directory: ~/app
    steps:
      - attach_workspace:
          at: ~/app
      - run:
          name: Run tests
          command: |
            cd tilup-web
            npm run test

  react_build:
      docker:
        - image: circleci/node:7.10
      working_directory: ~/app
      steps:
        - attach_workspace:
            at: ~/app
        - run:
            name: Run build
            command: |
              cd tilup-web
              CI=false npm run build

  docker_build_and_push:
      docker:
        - image: circleci/node:7.10
      working_directory: ~/app
      steps:
        - attach_workspace:
            at: ~/app
        - setup_remote_docker:
            docker_layer_caching: true
        - run:
           name: Docker build
           command: |
             docker build -t todayilearned .

        - run:
           name: Docker environment variables check
           command: |
             echo Docker environment variables check
             NUM_OF_VARIABLES_TO_CHECK=2
             VARIABLES_TO_CHECK=(\
             $CI_DOCKER_PASSWORD \
             $CI_DOCKER_USER \
             )

             if [ $NUM_OF_VARIABLES_TO_CHECK -ne ${#VARIABLES_TO_CHECK[@]} ]
             then
               echo "  "Add Environment Variables on ci environment.
               echo "  "Number of variables. Expected $NUM_OF_VARIABLES_TO_CHECK, Actual ${#VARIABLES_TO_CHECK[@]}
               echo "  "CI_DOCKER_USER CI_DOCKER_PASSWORD required.
               exit 1
             fi

        - run:
           name: Docker push
           command: |
             docker login -u $CI_DOCKER_USER -p $CI_DOCKER_PASSWORD
             BRANCH_SHORTEN=$(echo $CIRCLE_BRANCH | sed 's/[^-_.a-zA-Z0-9]/_/g')
             TAG=${BRANCH_SHORTEN:0:12}-${CIRCLE_SHA1:0:4}
             docker tag todayilearned $CI_DOCKER_USER/todayilearned:$TAG
             docker tag todayilearned $CI_DOCKER_USER/todayilearned:latest
             docker push $CI_DOCKER_USER/todayilearned

  deploy_to_stage:
      docker:
        - image: circleci/node:7.10
      working_directory: ~/app
      steps:
        - attach_workspace:
            at: ~/app
        - setup_remote_docker:
            docker_layer_caching: true

        - run:
           name: Docker environment variables check
           command: |
             echo Docker environment variables check
             NUM_OF_VARIABLES_TO_CHECK=7
             VARIABLES_TO_CHECK=(\
             $CI_STAGE_SSH_PEMURL \
             "$CI_STAGE_SSH_FINGERPRINT" \
             $CI_STAGE_SSH_USER \
             $CI_STAGE_HOST \
             $CI_STAGE_APP_PORT \
             $CI_DOCKER_USER \
             $CI_DOCKER_PASSWORD \
             )

             if [ $NUM_OF_VARIABLES_TO_CHECK -ne ${#VARIABLES_TO_CHECK[@]} ]
             then
               echo "  "Add Environment Variables on ci environment.
               echo "  "Number of variables. Expected $NUM_OF_VARIABLES_TO_CHECK, Actual ${#VARIABLES_TO_CHECK[@]}
               echo "  "CI_STAGE_SSH_PEMURL CI_STAGE_SSH_FINGERPRINT CI_STAGE_SSH_USER \
                 CI_STAGE_HOST CI_STAGE_APP_PORT CI_DOCKER_USER \
                 CI_DOCKER_PASSWORD required.
               exit 1
             fi

        - run:
            name: Deploy docker container on stage server
            command: |
              BRANCH_SHORTEN=$(echo $CIRCLE_BRANCH | sed 's/[^-_.a-zA-Z0-9]/_/g')
              TAG=${BRANCH_SHORTEN:0:12}-${CIRCLE_SHA1:0:4}

              export DEPLOY_SSH_PEMURL=$CI_STAGE_SSH_PEMURL
              export DEPLOY_SSH_FINGERPRINT=$CI_STAGE_SSH_FINGERPRINT
              export DEPLOY_SSH_USER=$CI_STAGE_SSH_USER
              export DEPLOY_SSH_HOST=$CI_STAGE_HOST
              export DEPLOY_APP_PORT=$CI_STAGE_APP_PORT
              export DOCKER_USER=$CI_DOCKER_USER
              export DOCKER_PASSWORD=$CI_DOCKER_PASSWORD
              export DOCKER_TAG=$TAG
              ./deploy-scripts/deploy.sh

  deploy_to_prod:
      docker:
        - image: circleci/node:7.10
      working_directory: ~/app
      steps:
        - attach_workspace:
            at: ~/app
        - setup_remote_docker:
            docker_layer_caching: true

        - run:
           name: Docker environment variables check
           command: |
             echo Docker environment variables check
             NUM_OF_VARIABLES_TO_CHECK=7
             VARIABLES_TO_CHECK=(\
             $CI_PROD_SSH_PEMURL \
             "$CI_PROD_SSH_FINGERPRINT" \
             $CI_PROD_SSH_USER \
             $CI_PROD_HOST \
             $CI_PROD_APP_PORT \
             $CI_DOCKER_USER \
             $CI_DOCKER_PASSWORD \
             )

             if [ $NUM_OF_VARIABLES_TO_CHECK -ne ${#VARIABLES_TO_CHECK[@]} ]
             then
               echo "  "Add Environment Variables on ci environment.
               echo "  "Number of variables. Expected $NUM_OF_VARIABLES_TO_CHECK, Actual ${#VARIABLES_TO_CHECK[@]}
               echo "  "CI_PROD_SSH_PEMURL CI_PROD_SSH_FINGERPRINT CI_PROD_SSH_USER \
                 CI_PROD_HOST CI_PROD_APP_PORT CI_DOCKER_USER \
                 CI_DOCKER_PASSWORD required.
               exit 1
             fi

        - run:
            name: Deploy docker container on stage server
            command: |
              BRANCH_SHORTEN=$(echo $CIRCLE_BRANCH | sed 's/[^-_.a-zA-Z0-9]/_/g')
              TAG=${BRANCH_SHORTEN:0:12}-${CIRCLE_SHA1:0:4}

              export DEPLOY_SSH_PEMURL=$CI_PROD_SSH_PEMURL
              export DEPLOY_SSH_FINGERPRINT=$CI_PROD_SSH_FINGERPRINT
              export DEPLOY_SSH_USER=$CI_PROD_SSH_USER
              export DEPLOY_SSH_HOST=$CI_PROD_HOST
              export DEPLOY_APP_PORT=$CI_PROD_APP_PORT
              export DOCKER_USER=$CI_DOCKER_USER
              export DOCKER_PASSWORD=$CI_DOCKER_PASSWORD
              export DOCKER_TAG=$TAG
              ./deploy-scripts/deploy.sh

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - react_install_dependencies
      - react_lint_checks:
          requires:
            - react_install_dependencies
      - react_tests:
          requires:
            - react_install_dependencies
      - react_build:
          requires:
            - react_lint_checks
            - react_tests

      - docker_build_and_push:
          requires:
            - react_build

      - deploy_to_stage:
          requires:
            - docker_build_and_push
          filters:
            branches:
              only: dev

      - deploy_to_prod:
          requires:
            - docker_build_and_push
          filters:
            branches:
              only: master
